{"version":3,"sources":["logo.svg","components/Business/Business.js","components/DialogBox/DialogBox.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/app.js","reportWebVitals.js","index.js"],"names":["Business","className","href","this","props","business","url","src","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","DialogBox","class_name","handleClick","bind","event","changeVisibility","console","log","isVisible","preventDefault","visibilityState","title","message","onClick","action","BusinessList","counter","updateCounter","toggleDialogBoxState","getVisibilityState","changeClassName","changeTwiceClassName","setState","getDialogBoxVisibilityState","businesses","length","map","id","searchInfo","term","location","SearchBar","sortBy","isTerm","isLocation","dialogBoxInfo","isDialogBoxVisible","dialogBoxClass","sortByOptions","handleSortByChange","handleTermChange","handleLocationChange","handleSearch","handleEnterOnTerm","handleEnterOnLocation","setDialogBox","sortByOption","Object","keys","sortByOptionValue","getSortByClass","target","value","searchYelp","keyCode","renderSortByOptions","placeholder","onChange","onKeyUp","Yelp","search","endpoint","authentication","method","headers","fetch","then","response","jsonResponse","json","image_url","address1","zip_code","categories","review_count","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAAe,I,wBCGTA,E,4JACF,WACI,OACI,sBAAKC,UAAU,WAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,mBAAGC,KAAMC,KAAKC,MAAMC,SAASC,IAA7B,SACI,qBAAKC,IAAKJ,KAAKC,MAAMC,SAASG,SAAUC,IAAI,SAGpD,6BAAKN,KAAKC,MAAMC,SAASK,OACzB,sBAAKT,UAAU,uBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,4BAAIE,KAAKC,MAAMC,SAASM,UACxB,4BAAIR,KAAKC,MAAMC,SAASO,OACxB,8BAAIT,KAAKC,MAAMC,SAASQ,MAAxB,IAAgCV,KAAKC,MAAMC,SAASS,cAExD,sBAAKb,UAAU,mBAAf,UACI,6BAAKE,KAAKC,MAAMC,SAASU,WACzB,qBAAId,UAAU,SAAd,UAAwBE,KAAKC,MAAMC,SAASW,OAA5C,YACA,8BAAIb,KAAKC,MAAMC,SAASY,YAAxB,2B,GAnBDC,IAAMC,WA2BdnB,ICKAoB,G,wDA/BX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IACDS,MAAQ,CACTQ,WAAY,UAEhB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALJ,E,+CAQnB,SAAYC,GACRrB,KAAKC,MAAMqB,mBACXC,QAAQC,IAAI,uBAAwBxB,KAAKU,MAAMe,WAC/CJ,EAAMK,mB,oBAGV,WACI,OACI,qBAAK5B,UAAS,8BAAyBE,KAAKC,MAAM0B,gBAAgB7B,UAApD,cAAd,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBE,KAAKC,MAAM2B,QAClC,mBAAG9B,UAAU,UAAb,SAAwBE,KAAKC,MAAM4B,UACnC,qBAAK/B,UAAU,SAASgC,QAAS9B,KAAKmB,YAAtC,SACI,4BAAInB,KAAKC,MAAM8B,sB,GAvBnBhB,IAAMC,YCwGfgB,E,kDArGX,WAAY/B,GAAQ,IAAD,8BACf,cAAMA,IACDS,MAAQ,CACTe,WAAW,EACX3B,UAAW,YAEf,EAAKmC,QAAU,EACf,EAAKnC,UAAY,aACjB,EAAKoC,cAAgB,EAAKA,cAAcd,KAAnB,gBACrB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBACxB,EAAKe,qBAAuB,EAAKA,qBAAqBf,KAA1B,gBAC5B,EAAKgB,mBAAqB,EAAKA,mBAAmBhB,KAAxB,gBAC1B,EAAKiB,gBAAkB,EAAKA,gBAAgBjB,KAArB,gBACvB,EAAKkB,qBAAuB,EAAKA,qBAAqBlB,KAA1B,gBAbb,E,iDAiBnB,WACIpB,KAAKiC,Y,8BAGT,WAGI,OAFAjC,KAAKkC,gBACLX,QAAQC,IAAI,qBAAsBxB,KAAKiC,SAClB,IAAjBjC,KAAKiC,QAGE,WAIA,W,kCAKf,WACIjC,KAAKuC,SAAS,CACVd,WAAYzB,KAAKU,MAAMe,UACvB3B,UAAoC,WAAzBE,KAAKU,MAAMZ,UAAyB,WAAa,WAEhEyB,QAAQC,IAAI,wBACZxB,KAAKC,MAAMkC,yB,gCAGf,WACI,OAAOnC,KAAKC,MAAMuC,gC,6BAGtB,WASI,OARAxC,KAAKkC,gBACLX,QAAQC,IAAI,qBAAsBxB,KAAKiC,SAClB,IAAjBjC,KAAKiC,QACLjC,KAAKF,UAAY,WAEjBE,KAAKF,UAAqC,WAAzBE,KAAKU,MAAMZ,UAAwB,WAAa,SAErEyB,QAAQC,IAAI,uCAAwCxB,KAAKF,WAClDE,KAAKF,Y,kCAGhB,WAaI,OAZqB,IAAjBE,KAAKiC,QACLjC,KAAKuC,SAAS,CACVd,WAAW,EACX3B,UAAW,WAERE,KAAKiC,QAAU,GACtBjC,KAAKuC,SAAS,CACVd,WAAYzB,KAAKU,MAAMe,UACvB3B,UAA8B,WAAnBE,KAAKF,UAAwB,WAAa,WAG7DyB,QAAQC,IAAI,4CAA6CxB,KAAKU,MAAMZ,WAC7D,CACH2B,UAAWzB,KAAKU,MAAMe,UACtB3B,UAAWE,KAAKU,MAAMZ,a,oBAI9B,WACI,OACI,qBAAKA,UAAU,eAAf,SACyC,IAAjCE,KAAKC,MAAMwC,WAAWC,OAAe1C,KAAKC,MAAMwC,WAAWE,KAAI,SAAAzC,GAAQ,OAAI,cAAC,EAAD,CAA4BA,SAAUA,GAAvBA,EAAS0C,OACnF,oBAAG9C,UAAS,oBAAeE,KAAKsB,oBAAhC,iCAA2EtB,KAAKC,MAAM4C,WAAWC,KAAjG,UAA8G9C,KAAKC,MAAM4C,WAAWE,kB,GArF7IhC,IAAMC,WC8KlBgC,G,wDA7KX,WAAY/C,GAAQ,IAAD,8BACf,cAAMA,IACDS,MAAQ,CACToC,KAAM,GACNC,SAAU,GACVE,OAAQ,aACRC,QAAQ,EACRC,YAAY,EACZC,cAAe,GACfC,oBAAoB,EACpBC,eAAgB,YAEpB,EAAKC,cAAgB,CACjB,aAAc,aACd,gBAAiB,SACjB,gBAAiB,gBAErB,EAAKtB,QAAU,EACf,EAAKuB,mBAAqB,EAAKA,mBAAmBpC,KAAxB,gBAC1B,EAAKqC,iBAAmB,EAAKA,iBAAiBrC,KAAtB,gBACxB,EAAKsC,qBAAuB,EAAKA,qBAAqBtC,KAA1B,gBAC5B,EAAKuC,aAAe,EAAKA,aAAavC,KAAlB,gBACpB,EAAKwC,kBAAoB,EAAKA,kBAAkBxC,KAAvB,gBACzB,EAAKyC,sBAAwB,EAAKA,sBAAsBzC,KAA3B,gBAC7B,EAAK8B,OAAS,EAAKA,OAAO9B,KAAZ,gBACd,EAAK+B,WAAa,EAAKA,WAAW/B,KAAhB,gBAClB,EAAK0C,aAAe,EAAKA,aAAa1C,KAAlB,gBACpB,EAAKe,qBAAuB,EAAKA,qBAAqBf,KAA1B,gBAC5B,EAAKgB,mBAAqB,EAAKA,mBAAmBhB,KAAxB,gBA5BX,E,kDA+BnB,SAAe2C,GACX,OAAO/D,KAAKU,MAAMuC,SAAWc,EAAe,SAAW,K,gCAI3D,SAAmB1C,EAAO0C,GACtB/D,KAAKuC,SAAS,CACVU,OAAQc,IAEZ/D,KAAK2D,aAAatC,K,iCAGtB,WAAuB,IAAD,OAClB,OAAO2C,OAAOC,KAAKjE,KAAKuD,eAAeZ,KAAK,SAAAoB,GACxC,IAAMG,EAAoB,EAAKX,cAAcQ,GAC7C,OAAO,oBACKjE,UAAW,EAAKqE,eAAeD,GAC/BpC,QAAS,SAACT,GACN,EAAKmC,mBAAmBnC,EAAO6C,IAHxC,SAIQH,GAJCG,Q,8BAQxB,SAAiB7C,GACbrB,KAAKuC,SAAS,CACVO,KAAMzB,EAAM+C,OAAOC,MACnBnB,OAA4B,KAApBlD,KAAKU,MAAMoC,S,kCAI3B,SAAqBzB,GACjBrB,KAAKuC,SAAS,CACVQ,SAAU1B,EAAM+C,OAAOC,MACvBlB,WAAoC,KAAxBnD,KAAKU,MAAMqC,a,0BAI/B,SAAa1B,IACa,IAAlBrB,KAAKkD,UACLlD,KAAK8D,aAAa,uBAAwB,uBAAwB,WAClE9D,KAAKmC,yBACwB,IAAtBnC,KAAKmD,cACZnD,KAAK8D,aAAa,uBAAwB,2BAA4B,WACtE9D,KAAKmC,yBAELnC,KAAKC,MAAMqE,WAAWtE,KAAKU,MAAMoC,KAAM9C,KAAKU,MAAMqC,SAAU/C,KAAKU,MAAMuC,QACvE5B,EAAMK,oB,oBAId,WACI,QAAO1B,KAAKU,MAAMoC,O,wBAGtB,WACI,QAAO9C,KAAKU,MAAMqC,W,0BAGtB,SAAanB,EAAOC,EAASE,GACzB/B,KAAKuC,SAAS,CACVa,cAAe,CACXxB,MAAOA,EACPC,QAASA,EACTE,OAAQA,O,kCAKpB,WASI/B,KAAKC,MAAMkC,yB,gCAGf,WAQI,OAAOnC,KAAKC,MAAMuC,gC,+BAItB,SAAkBnB,GACQ,KAAlBA,EAAMkD,UACFvE,KAAKmD,aACLnD,KAAKC,MAAMqE,WAAWtE,KAAKU,MAAMoC,KAAM9C,KAAKU,MAAMqC,SAAU/C,KAAKU,MAAMuC,SAGvEjD,KAAK8D,aAAa,uBAAwB,2BAA4B,WACtE9D,KAAKmC,2B,mCAMjB,SAAsBd,GACI,KAAlBA,EAAMkD,UACNvE,KAAKC,MAAMqE,WAAWtE,KAAKU,MAAMoC,KAAM9C,KAAKU,MAAMqC,SAAU/C,KAAKU,MAAMuC,SACjD,IAAlBjD,KAAKkD,WAELlD,KAAK8D,aAAa,uBAAwB,uBAAwB,WAClE9D,KAAKmC,2B,oBAKjB,WACI,OACI,sBAAKrC,UAAU,YAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,6BACKE,KAAKwE,0BAGd,sBAAK1E,UAAU,mBAAf,UACI,uBAAO8C,GAAG,YAAY6B,YAAY,kBAAkBC,SAAU1E,KAAKyD,iBAAkBkB,QAAS3E,KAAK4D,oBACnG,uBAAOhB,GAAG,gBAAgB6B,YAAY,SAASC,SAAU1E,KAAK0D,qBAAsBiB,QAAS3E,KAAK6D,2BAEtG,qBAAK/D,UAAU,mBAAf,SACI,mBAAGgC,QAAS9B,KAAK2D,aAAjB,wBAEJ,cAAC,EAAD,CAAW/B,MAAO5B,KAAKU,MAAM0C,cAAcxB,MAC/BC,QAAS7B,KAAKU,MAAM0C,cAAcvB,QAClCE,OAAQ/B,KAAKU,MAAM0C,cAAcrB,OACjCT,iBAAkBtB,KAAKmC,qBACvBR,gBAAiB3B,KAAKoC,8B,GAvK1BrB,IAAMC,YCoCf4D,EAtCF,CACTC,OADS,SACF/B,EAAMC,EAAUE,GACnB,IAAM6B,EAAQ,6FAAyFhC,EAAzF,qBAA0GC,EAA1G,oBAA8HE,GACtI8B,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CACL,OAAU,mBACV,mBAAoB,iBACpB,8BAA8B,yBAC9B,cAAgB,UAAhB,OAZD,sIAeP,OAAOC,MAAMJ,EAAUC,GACVI,MAAK,SAAAC,GACF,IAAMC,EAAeD,EAASE,OAE9B,OADA/D,QAAQC,IAAI,aAAc6D,GACnBA,KACRF,MAAK,SAAAE,GACJ,GAAIA,EAAa5C,WAEb,OADAlB,QAAQC,IAAI,gBAAiB6D,GACtBA,EAAa5C,WAAWE,KAAK,SAAAzC,GAAQ,MAAK,CAC7C0C,GAAI1C,EAAS0C,GACbvC,SAAUH,EAASqF,UACnBpF,IAAKD,EAASC,IACdI,KAAML,EAASK,KACfC,QAASN,EAAS6C,SAASyC,SAC3B/E,KAAMP,EAAS6C,SAAStC,KACxBC,MAAOR,EAAS6C,SAASrC,MACzBC,QAAST,EAAS6C,SAAS0C,SAC3B7E,SAAUV,EAASwF,WAAW,GAAG9D,MACjCf,OAAQX,EAASW,OACjBC,YAAaZ,EAASyF,sBCqCvCC,E,kDA/Db,WAAY3F,GAAQ,IAAD,8BACjB,cAAMA,IACDS,MAAQ,CACX+B,WAAY,GACZI,WAAY,GACZO,cAAe,GACfC,oBAAoB,EACpBC,eAAgB,YAElB,EAAKgB,WAAa,EAAKA,WAAWlD,KAAhB,gBAClB,EAAKe,qBAAuB,EAAKA,qBAAqBf,KAA1B,gBAC5B,EAAKoB,4BAA8B,EAAKA,4BAA4BpB,KAAjC,gBAXlB,E,8CAcnB,SAAW0B,EAAMC,EAAUE,GAAS,IAAD,OACjC1B,QAAQC,IAAI,QAASsB,GACrBvB,QAAQC,IAAI,WAAYuB,GACxBxB,QAAQC,IAAI,SAAUyB,GACtB2B,EAAKC,OAAO/B,EAAMC,EAAUE,GACjBkC,MAAK,SAAA1C,GACJ,EAAKF,SAAS,CACZE,WAAYA,EACZI,WAAY,CACVC,KAAMA,EACNC,SAAUA,EACVE,OAAQA,QAIxB1B,QAAQC,IAAI,cAAexB,KAAKU,MAAM+B,c,kCAGxC,WACEzC,KAAKuC,SAAS,CACVc,oBAAqBrD,KAAKU,MAAM2C,mBAChCC,eAA8C,aAA9BtD,KAAKU,MAAM4C,eAAgC,SAAW,aAE1E/B,QAAQC,IAAI,KACZD,QAAQC,IAAI,YAAaxB,KAAKU,MAAM2C,oBACpC9B,QAAQC,IAAI,YAAaxB,KAAKU,MAAM4C,kB,yCAGtC,WAIE,OAHA/B,QAAQC,IAAI,KACZD,QAAQC,IAAI,YAAaxB,KAAKU,MAAM2C,oBACpC9B,QAAQC,IAAI,YAAaxB,KAAKU,MAAM4C,gBAC7B,CACHxD,UAAWE,KAAKU,MAAM4C,eACtB7B,UAAWzB,KAAKU,MAAM2C,sB,oBAI5B,WACE,OACE,sBAAKvD,UAAU,MAAf,UACE,0CACA,cAAC,EAAD,CAAWwE,WAAYtE,KAAKsE,WAAYnC,qBAAsBnC,KAAKmC,qBAAsBK,4BAA6BxC,KAAKwC,8BAC3H,cAAC,EAAD,CAAcC,WAAYzC,KAAKU,MAAM+B,WAAYI,WAAY7C,KAAKU,MAAMmC,WAAYV,qBAAsBnC,KAAKmC,qBAAsBK,4BAA6BxC,KAAKwC,qC,GA1D7JzB,IAAMC,WCKT6E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7bc7494e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './Business.css';\r\n\r\nclass Business extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Business\">\r\n                <div className=\"image-container\">\r\n                    <a href={this.props.business.url}>\r\n                        <img src={this.props.business.imageSrc} alt=\"\" />\r\n                    </a>\r\n                </div>\r\n                <h2>{this.props.business.name}</h2>\r\n                <div className=\"Business-information\">\r\n                    <div className=\"Business-address\">\r\n                        <p>{this.props.business.address}</p>\r\n                        <p>{this.props.business.city}</p>\r\n                        <p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n                    </div>\r\n                    <div className=\"Business-reviews\">\r\n                        <h3>{this.props.business.category}</h3>\r\n                        <h3 className=\"rating\">{this.props.business.rating} stars</h3>\r\n                        <p>{this.props.business.reviewCount} reviews</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Business;","import React from 'react';\r\nimport './DialogBox.css';\r\n\r\nclass DialogBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            class_name: 'active'\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(event) {\r\n        this.props.changeVisibility();\r\n        console.log('this.state.isVisible', this.state.isVisible);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`DialogBox-container ${this.props.visibilityState.className}-DialogBox`}>\r\n                <div className=\"DialogBox\">\r\n                    <div className=\"DialogBox-subcontainer\">\r\n                        <h3 className=\"title\">{this.props.title}</h3>\r\n                        <p className=\"message\">{this.props.message}</p>\r\n                        <div className=\"action\" onClick={this.handleClick}>\r\n                            <a>{this.props.action}</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default DialogBox;","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business';\r\nimport DialogBox from '../DialogBox/DialogBox';\r\n\r\nclass BusinessList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isVisible: false,\r\n            className: 'inactive'\r\n        }\r\n        this.counter = 0;\r\n        this.className = 'active    ';\r\n        this.updateCounter = this.updateCounter.bind(this);\r\n        this.changeVisibility = this.changeVisibility.bind(this);\r\n        this.toggleDialogBoxState = this.toggleDialogBoxState.bind(this);\r\n        this.getVisibilityState = this.getVisibilityState.bind(this);\r\n        this.changeClassName = this.changeClassName.bind(this);\r\n        this.changeTwiceClassName = this.changeTwiceClassName.bind(this);\r\n    }\r\n    \r\n\r\n    updateCounter() {\r\n        this.counter++;\r\n    }\r\n\r\n    changeVisibility() {\r\n        this.updateCounter();\r\n        console.log('this.state.counter', this.counter);\r\n        if (this.counter === 1) {\r\n            //console.log('inactive');\r\n            //this.className = 'inactive';\r\n            return 'inactive';\r\n        } else {\r\n            //this.toggleDialogBoxState();\r\n            //this.className = this.getVisibilityState().className;\r\n            return 'active';\r\n        }\r\n        //console.log('BusinessList this.className', this.className);\r\n    }\r\n\r\n    toggleDialogBoxState() {\r\n        this.setState({\r\n            isVisible: !this.state.isVisible,\r\n            className: this.state.className === 'active' ? 'inactive' : 'active'\r\n        })\r\n        console.log('this.state.className');\r\n        this.props.toggleDialogBoxState();\r\n    }\r\n\r\n    getVisibilityState() {\r\n        return this.props.getDialogBoxVisibilityState();\r\n    }\r\n\r\n    changeClassName() {\r\n        this.updateCounter();\r\n        console.log('this.state.counter', this.counter);\r\n        if (this.counter === 1) {\r\n            this.className = 'inactive';\r\n        } else {\r\n            this.className = this.state.className === 'active'? 'inactive' : 'active';\r\n        }\r\n        console.log('in changeClassName(): this.className', this.className);\r\n        return this.className;\r\n    }\r\n\r\n    changeTwiceClassName() {\r\n        if (this.counter === 3) {\r\n            this.setState({\r\n                isVisible: true,\r\n                className: 'active'\r\n            });\r\n        } else if (this.counter > 3) {\r\n            this.setState({\r\n                isVisible: !this.state.isVisible,\r\n                className: this.className === 'active'? 'inactive' : 'active'\r\n            });\r\n        }\r\n        console.log('in changeTwiceClassName(): this.className', this.state.className);\r\n        return {\r\n            isVisible: this.state.isVisible,\r\n            className: this.state.className\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"BusinessList\">\r\n                {   this.props.businesses.length !== 0 ? this.props.businesses.map(business => <Business key={business.id} business={business} />) : \r\n                                    <p className={`no-result ${this.changeVisibility()}`}>No result found for {this.props.searchInfo.term} in/at {this.props.searchInfo.location}</p>\r\n/*\r\n                                    <div className={`no-result ${this.changeClassName()}`}>\r\n                                        <DialogBox title=\"Oops! Sorry!\"\r\n                                                    message={`No result found for ${this.props.searchInfo.term} in/at ${this.props.searchInfo.location}`}\r\n                                                    action=\"Got it!\"\r\n                                                    //changeVisibility={() => {}}\r\n                                                    //visibilityState={ {className: 'active' }}\r\n                                                    changeVisibility={this.changeTwiceClassName}\r\n                                                    visibilityState={this.changeTwiceClassName()}\r\n                                                    />*/\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BusinessList;","import React from 'react';\r\nimport './SearchBar.css';\r\nimport DialogBox from '../DialogBox/DialogBox';\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: '',\r\n            location: '',\r\n            sortBy: 'best_match',\r\n            isTerm: false,\r\n            isLocation: false,\r\n            dialogBoxInfo: {},\r\n            isDialogBoxVisible: false,\r\n            dialogBoxClass: 'inactive'\r\n        };\r\n        this.sortByOptions = {\r\n            'Best Match': 'best_match',\r\n            'Highest Rated': 'rating',\r\n            'Most Reviewed': 'review_count'\r\n        };\r\n        this.counter = 0;\r\n        this.handleSortByChange = this.handleSortByChange.bind(this);\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleEnterOnTerm = this.handleEnterOnTerm.bind(this);\r\n        this.handleEnterOnLocation = this.handleEnterOnLocation.bind(this);\r\n        this.isTerm = this.isTerm.bind(this);\r\n        this.isLocation = this.isLocation.bind(this);\r\n        this.setDialogBox = this.setDialogBox.bind(this);\r\n        this.toggleDialogBoxState = this.toggleDialogBoxState.bind(this);\r\n        this.getVisibilityState = this.getVisibilityState.bind(this);\r\n    }\r\n\r\n    getSortByClass(sortByOption){\r\n        return this.state.sortBy === sortByOption ? 'active' : '';\r\n\r\n    }\r\n\r\n    handleSortByChange(event, sortByOption) {\r\n        this.setState({\r\n            sortBy: sortByOption\r\n        });\r\n        this.handleSearch(event);\r\n    }\r\n\r\n    renderSortByOptions() {\r\n        return Object.keys(this.sortByOptions).map( sortByOption =>  {\r\n            const sortByOptionValue = this.sortByOptions[sortByOption];\r\n            return <li key={sortByOptionValue}\r\n                        className={this.getSortByClass(sortByOptionValue)}\r\n                        onClick={(event) => {\r\n                            this.handleSortByChange(event, sortByOptionValue)}\r\n                        }>{sortByOption}</li>;\r\n        });\r\n    }\r\n\r\n    handleTermChange(event) {\r\n        this.setState({\r\n            term: event.target.value,\r\n            isTerm: this.state.term === '' ? false : true\r\n        });\r\n    }\r\n\r\n    handleLocationChange(event) {\r\n        this.setState({\r\n            location: event.target.value,\r\n            isLocation: this.state.location === '' ? false : true\r\n        });\r\n    }\r\n\r\n    handleSearch(event) {\r\n        if (this.isTerm() === false) {\r\n            this.setDialogBox('Missing Search Input', 'Please enter a term.', 'Got it!');\r\n            this.toggleDialogBoxState();\r\n        } else if (this.isLocation() === false){\r\n            this.setDialogBox('Missing Search Input', 'Please enter a location.', 'Got it!');\r\n            this.toggleDialogBoxState();\r\n        } else {\r\n            this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    isTerm() {\r\n        return this.state.term ? true : false;\r\n    }\r\n\r\n    isLocation() {\r\n        return this.state.location ? true : false;\r\n    }\r\n\r\n    setDialogBox(title, message, action) {\r\n        this.setState({\r\n            dialogBoxInfo: {\r\n                title: title,\r\n                message: message,\r\n                action: action\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleDialogBoxState() {\r\n        /*\r\n        this.setState({\r\n            isDialogBoxVisible: !this.state.isDialogBoxVisible,\r\n            dialogBoxClass: this.state.dialogBoxClass === 'inactive' ? 'active' : 'inactive'\r\n        });\r\n        console.log('1');\r\n        console.log('isVisible', this.state.isDialogBoxVisible);\r\n        console.log('className', this.state.dialogBoxClass);*/\r\n        this.props.toggleDialogBoxState();\r\n    }\r\n\r\n    getVisibilityState() {/*\r\n        console.log('2');\r\n        console.log('isVisible', this.state.isDialogBoxVisible);\r\n        console.log('className', this.state.dialogBoxClass);\r\n        return {\r\n            className: this.state.dialogBoxClass,\r\n            isVisible: this.state.isDialogBoxVisible\r\n        }*/\r\n        return this.props.getDialogBoxVisibilityState();\r\n    }\r\n\r\n    // Handles Enter Key press on Term input field\r\n    handleEnterOnTerm(event) {\r\n        if (event.keyCode === 13) {\r\n            if (this.isLocation()) {\r\n                this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n            } else {\r\n                // alert(\"Please enter a location.\");\r\n                this.setDialogBox('Missing Search Input', 'Please enter a location.', 'Got it!');\r\n                this.toggleDialogBoxState();\r\n            }\r\n        }\r\n    }\r\n\r\n    // Handles Enter Key press on Location input field\r\n    handleEnterOnLocation(event) {\r\n        if (event.keyCode === 13) {\r\n            this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n            if (this.isTerm() === false) {\r\n                // alert(\"Please enter a term.\");\r\n                this.setDialogBox('Missing Search Input', 'Please enter a term.', 'Got it!');\r\n                this.toggleDialogBoxState();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                        {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input id=\"termField\" placeholder=\"Search Business\" onChange={this.handleTermChange} onKeyUp={this.handleEnterOnTerm} />\r\n                    <input id=\"locationField\" placeholder=\"Where?\" onChange={this.handleLocationChange} onKeyUp={this.handleEnterOnLocation} />\r\n                </div>\r\n                <div className=\"SearchBar-submit\">\r\n                    <a onClick={this.handleSearch}>Let's Go</a>\r\n                </div>\r\n                <DialogBox title={this.state.dialogBoxInfo.title}\r\n                            message={this.state.dialogBoxInfo.message}\r\n                            action={this.state.dialogBoxInfo.action}\r\n                            changeVisibility={this.toggleDialogBoxState}\r\n                            visibilityState={this.getVisibilityState()}\r\n                            />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SearchBar;","const apiKey = 'd63bbESUMV8GvTzYeTXvg5LoFkATfAVU18QNlZQmod7oCOMNzg9cr_Twu6jOXjYwqfvG2IhRzgpOlJ1CvPc0BrfnZ9SVxTZuBcPUGzPNikpoVlkCuvIxWesPS8KxYXYx';\r\nconst clientId = 'lx8TYRuT1khynvqwMBaLWw';\r\n\r\nconst Yelp = {\r\n    search(term, location, sortBy) {\r\n        const endpoint = `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`;\r\n        const authentication = {\r\n            method: 'GET',\r\n            headers: {\r\n                \"accept\": \"application/json\",\r\n                \"x-requested-with\": \"xmlhttprequest\",\r\n                \"Access-Control-Allow-Origin\":\"http://localhost:3000/\",\r\n                \"Authorization\": `Bearer ${apiKey}`\r\n            }\r\n        };\r\n        return fetch(endpoint, authentication)\r\n                    .then(response => {\r\n                        const jsonResponse = response.json();\r\n                        console.log('response: ', jsonResponse);\r\n                        return jsonResponse;\r\n                    }).then(jsonResponse => {\r\n                        if (jsonResponse.businesses) {\r\n                            console.log('jsonResponse:', jsonResponse)\r\n                            return jsonResponse.businesses.map( business => ({\r\n                                id: business.id,\r\n                                imageSrc: business.image_url,\r\n                                url: business.url,\r\n                                name: business.name,\r\n                                address: business.location.address1,\r\n                                city: business.location.city,\r\n                                state: business.location.state,\r\n                                zipCode: business.location.zip_code,\r\n                                category: business.categories[0].title,\r\n                                rating: business.rating,\r\n                                reviewCount: business.review_count\r\n                            }));\r\n                        }\r\n                    });\r\n    }\r\n};\r\n\r\nexport default Yelp;","import React from 'react';\nimport logo from '../../logo.svg';\nimport './app.css';\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Yelp from '../../util/Yelp';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: [],\n      searchInfo: {},\n      dialogBoxInfo: {},\n      isDialogBoxVisible: false,\n      dialogBoxClass: 'inactive'\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n    this.toggleDialogBoxState = this.toggleDialogBoxState.bind(this);\n    this.getDialogBoxVisibilityState = this.getDialogBoxVisibilityState.bind(this);\n  }\n\n  searchYelp(term, location, sortBy) {\n    console.log('term:', term)\n    console.log('location', location)\n    console.log('sortBy', sortBy)\n    Yelp.search(term, location, sortBy)\n              .then(businesses => {\n                this.setState({\n                  businesses: businesses,\n                  searchInfo: {\n                    term: term,\n                    location: location,\n                    sortBy: sortBy\n                  }\n                })\n              });\n    console.log('businesses:', this.state.businesses)\n  }\n\n  toggleDialogBoxState() {\n    this.setState({\n        isDialogBoxVisible: !this.state.isDialogBoxVisible,\n        dialogBoxClass: this.state.dialogBoxClass === 'inactive' ? 'active' : 'inactive'\n    });\n    console.log('1');\n    console.log('isVisible', this.state.isDialogBoxVisible);\n    console.log('className', this.state.dialogBoxClass);\n  }\n\n  getDialogBoxVisibilityState() {\n    console.log('2');\n    console.log('isVisible', this.state.isDialogBoxVisible);\n    console.log('className', this.state.dialogBoxClass);\n    return {\n        className: this.state.dialogBoxClass,\n        isVisible: this.state.isDialogBoxVisible\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp} toggleDialogBoxState={this.toggleDialogBoxState} getDialogBoxVisibilityState={this.getDialogBoxVisibilityState} />\n        <BusinessList businesses={this.state.businesses} searchInfo={this.state.searchInfo} toggleDialogBoxState={this.toggleDialogBoxState} getDialogBoxVisibilityState={this.getDialogBoxVisibilityState} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/app.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}